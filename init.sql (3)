PRAGMA foreign_keys = ON;

CREATE TABLE IF NOT EXISTS colleges (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
          code TEXT UNIQUE
);

CREATE TABLE IF NOT EXISTS hackathons (
      id TEXT PRIMARY KEY,
        college_id INTEGER,
          title TEXT,
            description TEXT,
              start_datetime TEXT,
                end_datetime TEXT,
                  max_team_size INTEGER,
                    FOREIGN KEY(college_id) REFERENCES colleges(id)
);

CREATE TABLE IF NOT EXISTS students (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
        college_id INTEGER,
          roll_no TEXT,
            name TEXT NOT NULL,
              email TEXT NOT NULL,
                phone TEXT,
                  UNIQUE(college_id, roll_no),
                    UNIQUE(college_id, email),
                      FOREIGN KEY(college_id) REFERENCES colleges(id)
);

CREATE TABLE IF NOT EXISTS teams (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
        event_id TEXT,
          name TEXT NOT NULL,
            leader_student_id INTEGER,
              created_at TEXT DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY(event_id) REFERENCES hackathons(id),
                  FOREIGN KEY(leader_student_id) REFERENCES students(id)
);

CREATE TABLE IF NOT EXISTS team_members (
      team_id INTEGER,
        student_id INTEGER,
          PRIMARY KEY(team_id, student_id),
            FOREIGN KEY(team_id) REFERENCES teams(id),
              FOREIGN KEY(student_id) REFERENCES students(id)
);

CREATE TABLE IF NOT EXISTS registrations (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
        event_id TEXT,
          student_id INTEGER,
            team_id INTEGER,
              registered_at TEXT DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(event_id, student_id),
                  FOREIGN KEY(event_id) REFERENCES hackathons(id),
                    FOREIGN KEY(student_id) REFERENCES students(id),
                      FOREIGN KEY(team_id) REFERENCES teams(id)
);

CREATE TABLE IF NOT EXISTS attendance (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
        event_id TEXT,
          student_id INTEGER,
            checkin_time TEXT,
              method TEXT,
                FOREIGN KEY(event_id) REFERENCES hackathons(id),
                  FOREIGN KEY(student_id) REFERENCES students(id)
);

CREATE TABLE IF NOT EXISTS feedbacks (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
        event_id TEXT,
          student_id INTEGER,
            rating INTEGER,
              comment TEXT,
                submitted_at TEXT DEFAULT CURRENT_TIMESTAMP,
                  UNIQUE(event_id, student_id),
                    FOREIGN KEY(event_id) REFERENCES hackathons(id),
                      FOREIGN KEY(student_id) REFERENCES students(id)
);
)
)
)
)
)
)
)
)